.TH INTRAEL 1 "March 18 2012" "" "Intrael application server"

.SH NAME
intrael \- Computer vision for the web

..SH SYNOPSIS
.TX
\fBintrael\fP [\fIoptions\fP]
     		
.br

.SH DESCRIPTION
The \fBintrael\fP server processes the depth stream from the Kinect, thresholds it and measures distinct blobs found in it. The derived data for each frame are then made available to network clients through HTTP wrapped in JSON arrays. These allow web developers to develop computer vision apps using javascript & HTML. The protocol used is standard HTTP so other languages can use it as well. The raw camera frames are provided as single JPEGs, MJPEG streams and binary files all tranferable over HTTP. 

.SH OPTIONS
.TP 
\fB-p \fIPORT\fR
Sets the port the server should listen to. Default is 6661.
.TP 
\fB-l \fIADDRESS\fR
 Sets the address the server should listen to. Default is INADDR_ANY.
.TP 
\fB-k \fIDEVICE\fR
 Sets the kinect device to use. You can either supply an index id(0-9) or the serial of a specific kinect. The special value "list" prints the serials of all kinected kinects. Default is 0, first device by index.
.TP 
\fB-u \fIFRAMES\fR
 The queue length of binary frames(600k each) to keep allocated to keep in memory the clients at any time. If more are needed because of slow or malicious clients, the processing will wait. Default is 3.
.TP 
\fB-f \fIFRAMES\fR
 The queue length of json and JPEG frames(64k each) to keep on memory to feed the clients at any time. If more are needed because of slow or malicious clients, the processing will wait. Default is 30.
.TP 
\fB-j \fIQUALITY\fR
 Sets the JPEG quality. Range is 25-75. Default is 75.
.TP 
\fB-s \fISECRET\fR
 Sets a secret passphrase to be used for securing the live config functionality of the server. If a value of '0' is provided the server won't accept config requests. Default it to allow them without authentication.  
.TP
\fB-b \fIFILE\fR
 Sets the filename to load as the background reference frame.
.TP
\fB-d \fIFILE\fR
 Sets the filename to dump the background reference file to.
.TP
\fB-o \fIFILE\fR
 Read a whitelist of origins allowed to connect to the server from the specified file. Default is to allow all origins.
.TP
\fB-O \fIORIGIN\fR
 Only this origin will be allowed to issue config requests.
.TP
\fB-i \fIFILE\fR
 Read a whitelist of IPs allowed to connect to the server from the specified file. Default is to allow all IPs.
.TP
\fB-I \fIADDRESS\fR
 Only this IP address will be allowed to issue config requests.
.TP
\fB-m \fICONNS\fR
 Max number of connections per IP address that will be allowed to connect to the server.
.TP
\fB-n\fR
 No rgb video. Disables the rgb camera and gives a small performance boost overall.
.TP 
\fB-v\fP
 Prints the version of the program.

.TP
\fB The following options can also be changed live through http requests\fP


.TP
\fB-e \fIINT\fR
 Background extraction. This option controls the mode of operation for the background extraction. A value of 0 disables extraction, everything scanned withing the boundaries described by the following options will be taken into account. A positive value forces the server to create a reference frame(controlled by the -r option, see below) and report just the differences on subsequent frames. A negative value the server also utiilizes a background frame but scans with depth boundaries(-z,-Z options) relative to the background frame. Eg along with -z 30 -Z 120 the server will scan for blobs that are from 30 to 120 mm from the wall(or whatever was captured in the background frame). In addition, the absolute value of the option acts as a safety margin that helps to clear noise that results from the instability of depth reporting from the kinect. Start low and raise until the result satisfies. The default value is 0, no extraction.
.TP
\fB-r \fIFRAMES\fR
 Set the number of frames to take into account while creating the background reference frame. Range is 1-999. Processing multiple frames leads to better quality of the reference frame and the extraction process(See above). While constructing the reference frame the kinect's led will blink orange-red. Range is 1-9999. The default is 30, about one second worth of frames.
.TP
\fB-x \fIPIXEL\fR
 Set the lower bound for the X axis scan. Range is 0-632. Will be rounded to a multiple of 8. Default is 0.
.TP
\fB-X \fIPIXEL\fR
 Set the higher bound for the X axis scan. Range is 0-632. Will be rounded to a multiple of 8. Default is 632.
.TP
\fB-y \fIPIXEL\fR
 Set the lower bound for the Y axis scan. Range is 0-478. Default is 0.
.TP
\fB-Y \fIPIXEL\fR
 Set the higher bound for the Y axis scan. Range is 0-479. Default is 479.
.TP
\fB-z \fIMILLIMETRES\fR
 Set the low threshold for the Y axis(depth) scan in mm. Range is 0-9999. Default is 30.
.TP
\fB-Z \fIMILLIMETRES\fR
 Set the high threshold for the Y axis scan in mm. Range is 1-9999. Default is 1340.
.TP
\fB-c \fIPIXELS\fR
 Set the minimum pixel count for an object to be reported. Range is 1-300000. Default is 1024.
.TP
\fB-C \fIPIXELS\fR
 Set the maximum pixel count for an object to be reported. Default is 0, check disabled.
.TP
\fB-b \fIDUMMY\fR
 When used in the context of live config(See below), it forces a reload of the reference frame from/if the file was specified on startup. DUMMY means that an argument has to be passed in the query string but is not taken into account.
.TP
\fB-d \fIDUMMY\fR
 When used in the context of live config(See below), it forces a dump of the reference frame to/if the file was specified on startup with the -F option. DUMMY means that an argument has to be passed in the query string but is not taken into account.
.TP
\fB-o \fIDUMMY\fR
 When used in the context of live config(See below), it forces a reload of the origin list from/if the file was specified on startup with the -o option. DUMMY means that an argument has to be passed in the query string but is not taken into account.
.TP
\fB-i \fIDUMMY\fR
 When used in the context of live config(See below), it forces a reload of the IP list from/if the file was specified on startup with the -i option. DUMMY means that an argument has to be passed in the query string but is not taken into account.
.TP
\fB-a \fIANGLE\fR
 Moves the motor to the specified angle. After the motor moves to the specified position(Indicated by the last element of the HEADER, see below) you should reconstruct the reference frame(-r option) if using background extraction. Range is -31 to 31.
.TP
\fB-g \fIBOOLEAN\fR
 Toggles accelerometer readings. 0 disables, 1 enables. Default is enabled

.SH USAGE

.TP
The server communicates using the http protocol. Clients retrieve the data through xmlhttprequests or the <img> tag wich we use to retrieve to JPEG shots or MJPEG streams. A request to http://<server_ip:server_port>/1x returns depth image responses. The second digit controls the rate of the response. A /10 would fetch a single JPEG while /11 activates true MJPEG streaming with a rate of 1:1 with the rate coming in from the kinect. /12 would fetch every 2nd frame halving the fps etc. You could append some additional data like a timestamp which will be ignored by the server(useful to prevent sharing of XHRs in case the same page gets to run on different tabs of the same browser)
.TP
 The same scheme works with the rgb cam(entry point /2x), binary blobs(/3x but the rate is fixed to single requests ie no streaming whatsoever) and the JSON data(/0x and actually any starting character besides 1,2 and 3). In the case of json text responses Server Sent Events can, and should, be used instead of long polling XHR. Unfortunately, since browser vendors heven't yet implemented CORS for SSE(patches landing soon though) the convenience library defaults to long polling. Streaming can be activated with intrael.start(true) and disabling of CORS(On chrome you'll need the --disable-web-security flag). 
.TP
By appending a query string, live configuration changes can be performed. Most command line options can be used with a form like /00?z=1000&Z=2000. This example would force the engine to threshold depth from 1000 to 2000 millimetres. By default this functionality is enabled. You can disable it by specifying the option -s 0 on the command line. If -s is set to a string authentication is enabled which works as follows: The second element from the header in the JSON data output of the server(see HEADER FORMAT below) is an incrementing counter that must be concatenated with the string provided to -s (<SECRET><TIMESTAMP>) and the result md5 hashed. The hash must then be passed along with the rest of the query arguments as an s=<HASH> for the rest of the commands, provided on the same query string, to take effect. After every succesful request the hash timestamp will change requiring a repeat of the process for subsequent requests. Concurrent requests from multiple clients are troublesome as only the first one will go through changing the hash and therefore blocking the rest. 
.TP
Finally, the entry point /4x fetches the Depth->RGB shifting tables as binary. Useful is someone wants to perform high quality cropping of features from the RGB stream.



.SH "FORMAT"
 
.TP
Tracking data come in numeric json arrays. The convenience library(intrael.js in resources/) automatically sets up communication with the server. The raw data are neatly packed into objects as the come and provided to a listener you specify. Here is a sample of usage:

// The default address is http://127.0.0.1:6661. Override that by providing another as the argument when constructing the object

var intrael = new Intrael(); 

//This handler will be called at most 30 times per second

intrael.addListener("data",function(e){
 console.log(e.header); // Always 16 elements long
 for(var i=0; i != e.blobs.length;i++){ // Array of blobs
  console.log(e.blobs[i].left.x); // Print the leftmost point's x coordinate for every blob
 }
});

//This will be called when connection fails

intrael.addListener("error",function(){
 // Try to reconnect every 5 seconds in case of failure

 window.setTimeout(function(){intrael.start();},5000);	

});

// Here goes
intrael.start();


The first 16 elements of the JSON array from the server's response will always be present, even if no blobs were detected. Each of these elements are described below by index( and the property in the packed header object):

.TP
\fB0\fP
Timestamp of the current frame as provided by the kinect (header.stamp).
.TP
\fB1\fP
Timestamp of the last configuration change. See path /0 above(header.config)
.TP
\fB2\fP
Background extraction mode. See -e option (header.mode).
.TP
\fB3\fP
Low x axis bound for the raster scan. See -x option (header.left).
.TP
\fB4\fP
High x axis bound for the raster scan. See -X option (header.right).
.TP
\fB5\fP
Low y axis bound for the raster scan. See -y option (header.top).
.TP
\fB6\fP
High y axis bound for the raster scan. See -Y option (header.bottom).
.TP
\fB7\fP
Low depth threshold. See -z option (header.near).
.TP
\fB8\fP
High depth threshold. See -Z option (header.far).
.TP
\fB9\fP
Low pixel count limit for blob filtering. See -c option (header.minpx).
.TP
\fB10\fP
High pixel count limit for blob filtering. See -C option (header.maxpx).
.TP
\fB11\fP
Accelerometer X value in G (header.ax).
.TP
\fB12\fP
Accelerometer Y value in G (header.ay).
.TP
\fB13\fP
Accelerometer Z value in G (header.az).
.TP
\fB14\fP
Motor angle as reported by the kinect (header.angle).
.TP
\fB15\fP
Motor state. 0-Not moving, 4-Moving (header.motor).

.SH "BLOB FORMAT"

 After the 16 elements of the header comes the information for the detected blobs in fixed length(32) element packs. The structure of these packs is described below by index( and the property in the packed blob object):

.TP
\fB0\fP
x coordinate of the geometric center of the object (blob.center.x).
.TP
\fB1\fP
y coordinate of the geometric center of the object (blob.center.y).
.TP
\fB2\fP
Average depth of all object's pixels (blob.center.z).
.TP
\fB3\fP
Background depth at the geometric center of the object (blob.center.d).
.TP
\fB4\fP
x coordinate of the leftmost point of the object (blob.left.x).
.TP
\fB5\fP
y coordinate of the leftmost point of the object (blob.left.y).
.TP
\fB6\fP
Depth of the leftmost point of the object (blob.left.z).
.TP
\fB7\fP
Background depth at the leftmost point of the object (blob.left.d).
.TP
\fB8\fP
x coordinate of the rightmost point of the object (blob.right.x).
.TP
\fB9\fP
y coordinate of the rightmost point of the object (blob.right.y).
.TP
\fB10\fP
Depth of the rightmost point of the object (blob.right.z).
.TP
\fB11\fP
Background depth at the rightmost point of the object (blob.right.d).
.TP
\fB12\fP
x coordinate of the topmost point of the object (blob.top.x).
.TP
\fB13\fP
y coordinate of the topmost point of the object (blob.top.y).
.TP
\fB14\fP
Depth of the topmost point of the object (blob.top.z).
.TP
\fB15\fP
Background depth at the topmost point of the object (blob.top.d).
.TP
\fB16\fP
x coordinate of the bottommost point of the object (blob.bottom.x).
.TP
\fB17\fP
y coordinate of the bottommost point of the object (blob.bottom.y).
.TP
\fB18\fP
Depth of the bottommost point of the object (blob.bottom.z).
.TP
\fB19\fP
Background depth at the bottommost point of the object (blob.bottom.d).
.TP
\fB20\fP
x coordinate of the point of the object nearest to the camera (blob.near.x).
.TP
\fB21\fP
y coordinate of the point of the object nearest to the camera (blob.near.y).
.TP
\fB22\fP
Depth of the point of the object nearest to the camera (blob.near.z).
.TP
\fB23\fP
Background depth at the point of the object nearest to the camera (blob.near.d).
.TP
\fB24\fP
x coordinate of the point of the object furthest from the camera (blob.far.x).
.TP
\fB25\fP
y coordinate of the point of the object furthest from the camera (blob.far.y).
.TP
\fB26\fP
Depth of the point of the object furthest from the camera (blob.far.z).
.TP
\fB27\fP
Background depth at the point of the object furthest from the camera (blob.far.d).
.TP
\fB28\fP
Pixel count of the object (blob.px).
.TP
\fB29\fP
The count of continuous horizontal lines(runs) that compose the object (blob.rs).
.TP
\fB30\fP
Y coordinate that indicates the area of greatest concentration of runs (blob.vr).
.TP
\fB31\fP
Composite x,y coordinate(640*y+x) of the location where the point corresponding to the geometric center is on the RGB image. Use it to adjust the depth image and crop features from the rgb camera (blob.dt).


.SH "EXAMPLES"

Check http://www.intrael.com

.SH "SEE ALSO"

Check http://www.openkinect.org


.SH "AUTHOR"

Yannis Gravezas (wizgrav@gmail.com)

.SH "LICENSE"

This file is part of the Intrael Project which provides computer vision for the web.
Copyright (C) 2012 Yannis Gravezas. You can contact the author at wizgrav@gmail.com.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

